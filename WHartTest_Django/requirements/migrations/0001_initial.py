# Generated by Django 5.2 on 2025-07-03 01:32

import django.db.models.deletion
import requirements.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("projects", "0002_project_creator"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RequirementDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="文档标题")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="文档描述"),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("docx", "Word文档"),
                            ("pptx", "PowerPoint"),
                            ("txt", "文本文件"),
                            ("md", "Markdown"),
                            ("html", "HTML"),
                        ],
                        max_length=10,
                        verbose_name="文档类型",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=requirements.models.requirement_document_upload_path,
                        verbose_name="文件",
                    ),
                ),
                (
                    "content",
                    models.TextField(blank=True, null=True, verbose_name="文档内容"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploaded", "已上传"),
                            ("processing", "处理中"),
                            ("module_split", "模块拆分中"),
                            ("user_reviewing", "用户调整中"),
                            ("ready_for_review", "待评审"),
                            ("reviewing", "评审中"),
                            ("review_completed", "评审完成"),
                            ("failed", "处理失败"),
                        ],
                        default="uploaded",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "version",
                    models.CharField(default="1.0", max_length=20, verbose_name="版本号"),
                ),
                ("is_latest", models.BooleanField(default=True, verbose_name="是否最新版本")),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="上传时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("word_count", models.IntegerField(default=0, verbose_name="字数")),
                ("page_count", models.IntegerField(default=0, verbose_name="页数")),
                (
                    "parent_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="requirements.requirementdocument",
                        verbose_name="父文档",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirement_documents",
                        to="projects.project",
                        verbose_name="所属项目",
                    ),
                ),
                (
                    "uploader",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_requirement_documents",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="上传人",
                    ),
                ),
            ],
            options={
                "verbose_name": "需求文档",
                "verbose_name_plural": "需求文档",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="RequirementModule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="模块名称")),
                ("content", models.TextField(verbose_name="模块内容")),
                (
                    "start_page",
                    models.IntegerField(blank=True, null=True, verbose_name="起始页码"),
                ),
                (
                    "end_page",
                    models.IntegerField(blank=True, null=True, verbose_name="结束页码"),
                ),
                (
                    "start_position",
                    models.IntegerField(blank=True, null=True, verbose_name="起始位置"),
                ),
                (
                    "end_position",
                    models.IntegerField(blank=True, null=True, verbose_name="结束位置"),
                ),
                ("order", models.IntegerField(default=0, verbose_name="排序")),
                (
                    "is_auto_generated",
                    models.BooleanField(default=True, verbose_name="AI自动生成"),
                ),
                (
                    "confidence_score",
                    models.FloatField(blank=True, null=True, verbose_name="置信度"),
                ),
                (
                    "ai_suggested_title",
                    models.CharField(blank=True, max_length=200, verbose_name="AI建议标题"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="requirements.requirementdocument",
                        verbose_name="所属文档",
                    ),
                ),
                (
                    "parent_module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_modules",
                        to="requirements.requirementmodule",
                        verbose_name="父模块",
                    ),
                ),
            ],
            options={
                "verbose_name": "需求模块",
                "verbose_name_plural": "需求模块",
                "ordering": ["document", "order"],
            },
        ),
        migrations.CreateModel(
            name="ReviewReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "review_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="评审时间"),
                ),
                (
                    "reviewer",
                    models.CharField(
                        default="AI需求评审助手", max_length=100, verbose_name="评审人"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待开始"),
                            ("in_progress", "评审中"),
                            ("completed", "已完成"),
                            ("failed", "评审失败"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="评审状态",
                    ),
                ),
                (
                    "overall_rating",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "优秀"),
                            ("good", "良好"),
                            ("average", "一般"),
                            ("needs_improvement", "需改进"),
                            ("poor", "较差"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="总体评价",
                    ),
                ),
                (
                    "completion_score",
                    models.IntegerField(
                        default=0, help_text="0-100分", verbose_name="完整度评分"
                    ),
                ),
                ("total_issues", models.IntegerField(default=0, verbose_name="问题总数")),
                (
                    "high_priority_issues",
                    models.IntegerField(default=0, verbose_name="高优先级问题"),
                ),
                (
                    "medium_priority_issues",
                    models.IntegerField(default=0, verbose_name="中优先级问题"),
                ),
                (
                    "low_priority_issues",
                    models.IntegerField(default=0, verbose_name="低优先级问题"),
                ),
                ("summary", models.TextField(blank=True, verbose_name="评审摘要")),
                ("recommendations", models.TextField(blank=True, verbose_name="改进建议")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review_reports",
                        to="requirements.requirementdocument",
                        verbose_name="评审文档",
                    ),
                ),
            ],
            options={
                "verbose_name": "评审报告",
                "verbose_name_plural": "评审报告",
                "ordering": ["-review_date"],
            },
        ),
        migrations.CreateModel(
            name="ReviewIssue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("specification", "规范性"),
                            ("clarity", "清晰度"),
                            ("completeness", "完整性"),
                            ("consistency", "一致性"),
                            ("feasibility", "可行性"),
                        ],
                        max_length=20,
                        verbose_name="问题类型",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[("high", "高"), ("medium", "中"), ("low", "低")],
                        max_length=10,
                        verbose_name="优先级",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="问题标题")),
                ("description", models.TextField(verbose_name="问题描述")),
                ("suggestion", models.TextField(blank=True, verbose_name="改进建议")),
                (
                    "location",
                    models.CharField(blank=True, max_length=200, verbose_name="问题位置"),
                ),
                (
                    "page_number",
                    models.IntegerField(blank=True, null=True, verbose_name="页码"),
                ),
                (
                    "section",
                    models.CharField(blank=True, max_length=100, verbose_name="章节"),
                ),
                ("is_resolved", models.BooleanField(default=False, verbose_name="已解决")),
                ("resolution_note", models.TextField(blank=True, verbose_name="解决说明")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="requirements.requirementmodule",
                        verbose_name="相关模块",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="requirements.reviewreport",
                        verbose_name="所属报告",
                    ),
                ),
            ],
            options={
                "verbose_name": "评审问题",
                "verbose_name_plural": "评审问题",
                "ordering": ["priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ModuleReviewResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "module_rating",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "优秀"),
                            ("good", "良好"),
                            ("average", "一般"),
                            ("needs_improvement", "需改进"),
                            ("poor", "较差"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="模块评价",
                    ),
                ),
                ("issues_count", models.IntegerField(default=0, verbose_name="问题数量")),
                (
                    "severity_score",
                    models.IntegerField(
                        default=0, help_text="0-100分，分数越高问题越严重", verbose_name="严重程度评分"
                    ),
                ),
                ("analysis_content", models.TextField(blank=True, verbose_name="分析内容")),
                ("strengths", models.TextField(blank=True, verbose_name="优点")),
                ("weaknesses", models.TextField(blank=True, verbose_name="不足")),
                ("recommendations", models.TextField(blank=True, verbose_name="改进建议")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review_results",
                        to="requirements.requirementmodule",
                        verbose_name="评审模块",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="module_results",
                        to="requirements.reviewreport",
                        verbose_name="所属报告",
                    ),
                ),
            ],
            options={
                "verbose_name": "模块评审结果",
                "verbose_name_plural": "模块评审结果",
                "ordering": ["module__order"],
            },
        ),
        migrations.AddIndex(
            model_name="requirementdocument",
            index=models.Index(
                fields=["project", "status"], name="requirement_project_d5103d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="requirementdocument",
            index=models.Index(
                fields=["uploader", "uploaded_at"],
                name="requirement_uploade_e28038_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="requirementmodule",
            index=models.Index(
                fields=["document", "order"], name="requirement_documen_b0101e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reviewissue",
            index=models.Index(
                fields=["report", "priority"], name="requirement_report__fdb182_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reviewissue",
            index=models.Index(
                fields=["module", "issue_type"], name="requirement_module__9ffe2c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="modulereviewresult",
            unique_together={("report", "module")},
        ),
    ]
